version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.0
    container_name: optimaize-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Elasticsearch for keyword search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: optimaize-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # OptimAIze Application (for future chunks)
  optimaize-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: optimaize-app
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    environment:
      - QDRANT_URL=http://qdrant:6333
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - DATABASE_TYPE=sqlite
      - EMBEDDING_DEVICE=cpu
    depends_on:
      qdrant:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - app  # Only start with --profile app

volumes:
  qdrant_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  default:
    name: optimaize-network